/**
 * backend-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Employee model module.
 * @module gp.backend.model/Employee
 * @version 1.0.0
 */
class Employee {
    /**
     * Constructs a new <code>Employee</code>.
     * @alias module:gp.backend.model/Employee
     */
    constructor() { 
        
        Employee.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Employee</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:gp.backend.model/Employee} obj Optional instance to populate.
     * @return {module:gp.backend.model/Employee} The populated <code>Employee</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Employee();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('fullName')) {
                obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
            }
            if (data.hasOwnProperty('dateOfBirth')) {
                obj['dateOfBirth'] = ApiClient.convertToType(data['dateOfBirth'], 'Date');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('profilePic')) {
                obj['profilePic'] = ApiClient.convertToType(data['profilePic'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('branchId')) {
                obj['branchId'] = ApiClient.convertToType(data['branchId'], 'String');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
Employee.prototype['name'] = undefined;

/**
 * @member {String} id
 */
Employee.prototype['id'] = undefined;

/**
 * @member {String} fullName
 */
Employee.prototype['fullName'] = undefined;

/**
 * @member {Date} dateOfBirth
 */
Employee.prototype['dateOfBirth'] = undefined;

/**
 * @member {String} username
 */
Employee.prototype['username'] = undefined;

/**
 * @member {String} password
 */
Employee.prototype['password'] = undefined;

/**
 * @member {String} profilePic
 */
Employee.prototype['profilePic'] = undefined;

/**
 * @member {String} email
 */
Employee.prototype['email'] = undefined;

/**
 * @member {String} phone
 */
Employee.prototype['phone'] = undefined;

/**
 * @member {String} branchId
 */
Employee.prototype['branchId'] = undefined;

/**
 * @member {module:gp.backend.model/Employee.AccountTypeEnum} accountType
 */
Employee.prototype['accountType'] = undefined;





/**
 * Allowed values for the <code>accountType</code> property.
 * @enum {String}
 * @readonly
 */
Employee['AccountTypeEnum'] = {

    /**
     * value: "ROLE_HELP_DESK"
     * @const
     */
    "HELP_DESK": "ROLE_HELP_DESK",

    /**
     * value: "ROLE_MANAGEMENT"
     * @const
     */
    "MANAGEMENT": "ROLE_MANAGEMENT",

    /**
     * value: "ROLE_ADMIN"
     * @const
     */
    "ADMIN": "ROLE_ADMIN"
};



export default Employee;

